let Observable,map;_bdf‍.w("rxjs",[["Observable",["Observable"],function(v){Observable=v}]]);_bdf‍.w("rxjs/operators",[["map",["map"],function(v){map=v}]]);


const monze$ = Observable.create((subject) => {
    console.log('Second X-Observable');
    const interval = setInterval(() => {
        subject.next('XPrimary');
    }, 1000);
    setTimeout(() => clearInterval(interval), 17 * 1000);
 });
 const primaryX = monze$.subscribe(_bdf‍.g.console.log);
  
 setTimeout(() => primaryX.unsubscribe(), 10 * 1000);

 //////////////////////////////////////////////////////////////

 const pemba$ = Observable.create((subject) => {
    console.log('First X-Observable');
    const interval = setInterval(() => {
        subject.next('XBasic');
    }, 1000);
    setTimeout(() => clearInterval(interval), 7 * 1000);
 });
 const secondary1 = pemba$.pipe(
    map((val, index) => index % 2 === 0 ? val : 'xSecondary')
 ).subscribe(val => _bdf‍.g.console.log(val));
  
 setTimeout(() => secondary1.unsubscribe(), 10 * 1000);